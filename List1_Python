# first_last6
def first_last6(nums):
  if nums[0]==6 or nums[-1]==6:
    return True
  else:
    return False
    
# same_first_last
def same_first_last(nums):
  if len(nums)>=1 and nums[0]== nums[len(nums)-1]:
    return True
  else:
    return False
# make_pi
def make_pi():
  pi={3,1,4}

  
  return [3,1,4]
# common_end
def common_end(a, b):
  if a[0]==b[0] or a[-1]==b[-1]:
    return True
  else:
    return False
# sum3
def sum3(nums):
  sum=0
  for i in range(0,len(nums)):
    sum=sum+nums[i]
  return sum
# rotate_left3
def rotate_left3(nums):
  temp=nums[0]
  nums[0]=nums[1]
  nums[1]=nums[-1]
  nums[-1]=temp
  return [nums[0],nums[1],nums[-1]]
 #reverse3
 def reverse3(nums):
  for i in range (0,len(nums)):
   return (nums[::-1])
# max_end3
def max_end3(nums):
  for i in nums:
    if nums[0]>nums[-1]:
      return [nums[0]]*3
      
    else:
      return [nums[-1]]*3
# sum2

def sum2(nums):
  sum=0
  
  if len(nums)>=2:
    sum=nums[0]+nums[1]
    return sum
  elif len(nums)==1:
    return nums[0]
  else:
    return 0
 # middle_way
 def middle_way(a, b):
  new_array=[]
  new_array.append(a[1])
  new_array.append(b[1])
  return new_array
#make_ends
def make_ends(nums):
  new_array=[]
  new_array.append(nums[0])
  new_array.append(nums[-1])
  return new_array
#has23
def has23(nums):
  if 2 in nums or 3 in nums:
    return True
  else:
    return False
